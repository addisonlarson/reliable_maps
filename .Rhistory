xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
ylab("Probability") + xlab("Potential Value of Estimate") +
scale_y_continuous(breaks = NULL) +
ggtitle("Range of Possible Values for All Census Tracts") +
theme_minimal()
plot(p6)
# All estimates with boundaries and classification error
# Two estimates with class boundary and classification error
p6 <- ggplot(data = data.frame(x = c(-10, 110)), aes(x)) +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[1,]$pct, sd = top[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[1,]$pct, sd = top[1,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[2,]$pct, sd = top[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[2,]$pct, sd = top[2,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[3,]$pct, sd = top[3,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[3,]$pct, sd = top[3,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
ylab("Probability") + xlab("Potential Value of Estimate") +
scale_y_continuous(breaks = NULL) +
ggtitle("Range of Possible Values for All Census Tracts") +
theme_minimal()
plot(p6)
# All estimates with boundaries and classification error
# Two estimates with class boundary and classification error
p6 <- ggplot(data = data.frame(x = c(-10, 110)), aes(x)) +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[1,]$pct, sd = top[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[1,]$pct, sd = top[1,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[2,]$pct, sd = top[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[2,]$pct, sd = top[2,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[3,]$pct, sd = top[3,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[3,]$pct, sd = top[3,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
ylab("Probability") + xlab("Potential Value of Estimate") +
scale_y_continuous(breaks = NULL) +
ggtitle("Range of Possible Values for All Census Tracts") +
theme_minimal()
plot(p6)
# All estimates with boundaries and classification error
# Two estimates with class boundary and classification error
p6 <- ggplot(data = data.frame(x = c(-10, 110)), aes(x)) +
annotate("segment", x = 200 / 3, xend = 200 / 3, y = 0.1, yend = 0, color = "gray") +
annotate("segment", x = 100 / 3, xend = 100 / 3, y = 0.1, yend = 0, color = "gray") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[1,]$pct, sd = top[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[1,]$pct, sd = top[1,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[2,]$pct, sd = top[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[2,]$pct, sd = top[2,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[3,]$pct, sd = top[3,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[3,]$pct, sd = top[3,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
ylab("Probability") + xlab("Potential Value of Estimate") +
scale_y_continuous(breaks = NULL) +
ggtitle("Range of Possible Values for All Census Tracts") +
theme_minimal()
plot(p6)
# All estimates with boundaries and classification error
# Two estimates with class boundary and classification error
p6 <- ggplot(data = data.frame(x = c(-10, 110)), aes(x)) +
annotate("segment", x = 200 / 3, xend = 200 / 3, y = 0.2, yend = 0, color = "gray") +
annotate("segment", x = 100 / 3, xend = 100 / 3, y = 0.2, yend = 0, color = "gray") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[1,]$pct, sd = top[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[1,]$pct, sd = top[1,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[2,]$pct, sd = top[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[2,]$pct, sd = top[2,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[3,]$pct, sd = top[3,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[3,]$pct, sd = top[3,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
ylab("Probability") + xlab("Potential Value of Estimate") +
scale_y_continuous(breaks = NULL) +
ggtitle("Range of Possible Values for All Census Tracts") +
theme_minimal()
plot(p6)
# All estimates with boundaries and classification error
# Two estimates with class boundary and classification error
p6 <- ggplot(data = data.frame(x = c(-10, 110)), aes(x)) +
annotate("segment", x = 200 / 3, xend = 200 / 3, y = 0.2, yend = 0, color = "gray") +
annotate("segment", x = 100 / 3, xend = 100 / 3, y = 0.2, yend = 0, color = "gray") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[1,]$pct, sd = top[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[1,]$pct, sd = top[1,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[2,]$pct, sd = top[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[2,]$pct, sd = top[2,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[3,]$pct, sd = top[3,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.3,
args = list(mean = top[3,]$pct, sd = top[3,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = "black", alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.3,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.3,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
ylab("Probability") + xlab("Potential Value of Estimate") +
scale_y_continuous(breaks = NULL) +
ggtitle("Range of Possible Values for All Census Tracts") +
theme_minimal()
plot(p6)
# All estimates with boundaries and classification error
# Two estimates with class boundary and classification error
p6 <- ggplot(data = data.frame(x = c(-10, 110)), aes(x)) +
annotate("segment", x = 200 / 3, xend = 200 / 3, y = 0.2, yend = 0, color = "gray") +
annotate("segment", x = 100 / 3, xend = 100 / 3, y = 0.2, yend = 0, color = "gray") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[1,]$pct, sd = top[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.5,
args = list(mean = top[1,]$pct, sd = top[1,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[2,]$pct, sd = top[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.5,
args = list(mean = top[2,]$pct, sd = top[2,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[3,]$pct, sd = top[3,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.5,
args = list(mean = top[3,]$pct, sd = top[3,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.5,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.5,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
ylab("Probability") + xlab("Potential Value of Estimate") +
scale_y_continuous(breaks = NULL) +
ggtitle("Range of Possible Values for All Census Tracts") +
theme_minimal()
plot(p6)
# All estimates with boundaries and classification error
# Two estimates with class boundary and classification error
p6 <- ggplot(data = data.frame(x = c(-10, 110)), aes(x)) +
annotate("segment", x = 200 / 3, xend = 200 / 3, y = 0.17, yend = 0, color = "gray") +
annotate("segment", x = 100 / 3, xend = 100 / 3, y = 0.17, yend = 0, color = "gray") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[1,]$pct, sd = top[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.5,
args = list(mean = top[1,]$pct, sd = top[1,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[2,]$pct, sd = top[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.5,
args = list(mean = top[2,]$pct, sd = top[2,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[3,]$pct, sd = top[3,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.5,
args = list(mean = top[3,]$pct, sd = top[3,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.5,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.5,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
ylab("Probability") + xlab("Potential Value of Estimate") +
scale_y_continuous(breaks = NULL) +
ggtitle("Range of Possible Values for All Census Tracts") +
theme_minimal()
plot(p6)
# All estimates with boundaries and classification error
# Two estimates with class boundary and classification error
p6 <- ggplot(data = data.frame(x = c(-10, 110)), aes(x)) +
annotate("segment", x = 200 / 3, xend = 200 / 3, y = 0.18, yend = 0, color = "gray") +
annotate("segment", x = 100 / 3, xend = 100 / 3, y = 0.18, yend = 0, color = "gray") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[1,]$pct, sd = top[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.5,
args = list(mean = top[1,]$pct, sd = top[1,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[2,]$pct, sd = top[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.5,
args = list(mean = top[2,]$pct, sd = top[2,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = primary,
args = list(mean = top[3,]$pct, sd = top[3,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = primary, alpha = 0.5,
args = list(mean = top[3,]$pct, sd = top[3,]$sd),
xlim = c(0, 200 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[1,]$pct, sd = middle[1,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = tertiary,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(0, 100 / 3),
geom = "area") +
stat_function(fun = dnorm, n = 101, fill = tertiary, alpha = 0.5,
args = list(mean = middle[2,]$pct, sd = middle[2,]$sd),
xlim = c(200 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.5,
args = list(mean = bottom[1,]$pct, sd = bottom[1,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
stat_function(fun = dnorm, n = 101, color = secondary,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd)) +
stat_function(fun = dnorm, n = 101, fill = secondary, alpha = 0.5,
args = list(mean = bottom[2,]$pct, sd = bottom[2,]$sd),
xlim = c(100 / 3, 100),
geom = "area") +
ylab("Probability") + xlab("Potential Value of Estimate") +
scale_y_continuous(breaks = NULL) +
ggtitle("Range of Possible Values for All Census Tracts") +
theme_minimal()
plot(p6)
png(here("figures", "p6.png"), width = 10, height = 7.5, units = "in", res = 500)
plot(p6)
dev.off()
